// <auto-generated />
using System;
using DIRECTION_GESTOR.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DIRECTION_GESTOR.Migrations
{
    [DbContext(typeof(DB_DIRECTIONGESTORContext))]
    [Migration("20191114040119_dbDirectionGestorMigration1")]
    partial class dbDirectionGestorMigration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Actanacimiento", b =>
                {
                    b.Property<int>("IdActaNacimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idActaNacimiento")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnioActaNacimiento")
                        .IsRequired()
                        .HasColumnName("anioActaNacimiento")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("FolioActaNacimiento")
                        .IsRequired()
                        .HasColumnName("folioActaNacimiento")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<int>("IdCircunscripcionFk")
                        .HasColumnName("idCircunscripcionFK");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.Property<int>("IdPersonaFk")
                        .HasColumnName("idPersonaFK");

                    b.Property<string>("LibroActaNacimiento")
                        .IsRequired()
                        .HasColumnName("libroActaNacimiento")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("NumeroActaNacimiento")
                        .IsRequired()
                        .HasColumnName("numeroActaNacimiento")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.HasKey("IdActaNacimiento");

                    b.HasIndex("IdCircunscripcionFk");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.HasIndex("IdPersonaFk");

                    b.ToTable("ACTANACIMIENTO");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Archivos", b =>
                {
                    b.Property<int>("IdArchivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idArchivo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnlaceArchivo")
                        .IsRequired()
                        .HasColumnName("enlaceArchivo")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaArchivo")
                        .HasColumnName("fechaArchivo")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnName("hora");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.Property<int>("IdTipoArchivoFk")
                        .HasColumnName("idTipoArchivoFK");

                    b.HasKey("IdArchivo");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.HasIndex("IdTipoArchivoFk");

                    b.ToTable("ARCHIVOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Articulos", b =>
                {
                    b.Property<int>("IdArticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idArticulo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CantidadArticulo")
                        .HasColumnName("cantidadArticulo")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("CodigoArticulo")
                        .IsRequired()
                        .HasColumnName("codigoArticulo")
                        .HasColumnType("text");

                    b.Property<string>("DescripcionArticulo")
                        .IsRequired()
                        .HasColumnName("descripcionArticulo")
                        .HasColumnType("text");

                    b.Property<string>("FechaArticulo")
                        .IsRequired()
                        .HasColumnName("fechaArticulo")
                        .HasColumnType("text");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.Property<decimal>("PrecioArticulo")
                        .HasColumnName("precioArticulo")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("IdArticulo");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.ToTable("ARTICULOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Asignaturas", b =>
                {
                    b.Property<string>("IdAsignatura")
                        .HasColumnName("idAsignatura")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<string>("DescripcionAsignatura")
                        .IsRequired()
                        .HasColumnName("descripcionAsignatura")
                        .HasColumnType("text");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.HasKey("IdAsignatura");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.ToTable("ASIGNATURAS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Asignaturasempleados", b =>
                {
                    b.Property<int>("IdAsignaturaEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idAsignaturaEmpleado")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoEmpleadoFk")
                        .HasColumnName("codigoEmpleadoFK")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.HasKey("IdAsignaturaEmpleado");

                    b.HasIndex("CodigoEmpleadoFk");

                    b.HasIndex("IdEstadoFk");

                    b.ToTable("ASIGNATURASEMPLEADOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Asignaturasempleadosestudiantes", b =>
                {
                    b.Property<int>("IdAsignaturaEmpleadoEstudiante")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idAsignaturaEmpleadoEstudiante")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoEstudianteFk")
                        .IsRequired()
                        .HasColumnName("codigoEstudianteFK")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("IdAsignaturaEmpleadoFk")
                        .HasColumnName("idAsignaturaEmpleadoFK");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdPeriodoFk")
                        .HasColumnName("idPeriodoFK");

                    b.HasKey("IdAsignaturaEmpleadoEstudiante");

                    b.HasIndex("CodigoEstudianteFk");

                    b.HasIndex("IdAsignaturaEmpleadoFk");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdPeriodoFk");

                    b.ToTable("ASIGNATURASEMPLEADOSESTUDIANTES");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Aulas", b =>
                {
                    b.Property<int>("IdAula")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idAula")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionAula")
                        .IsRequired()
                        .HasColumnName("descripcionAula")
                        .HasColumnType("text");

                    b.Property<int>("IdEdificioFk")
                        .HasColumnName("idEdificioFK");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.HasKey("IdAula");

                    b.HasIndex("IdEdificioFk");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.ToTable("AULAS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Barrios", b =>
                {
                    b.Property<int>("IdBarrio")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idBarrio")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionBarrio")
                        .IsRequired()
                        .HasColumnName("descripcionBarrio")
                        .HasColumnType("text");

                    b.Property<string>("IdCiudadFk")
                        .IsRequired()
                        .HasColumnName("idCiudadFK")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.HasKey("IdBarrio");

                    b.HasIndex("IdCiudadFk");

                    b.HasIndex("IdEstadoFk");

                    b.ToTable("BARRIOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Calificaciones", b =>
                {
                    b.Property<int>("IdCalificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idCalificacion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Calificacion")
                        .HasColumnName("calificacion")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<DateTime>("FechaCalificacion")
                        .HasColumnName("fechaCalificacion")
                        .HasColumnType("date");

                    b.Property<int>("IdAsignaturaEmpleadoEstudianteFk")
                        .HasColumnName("idAsignaturaEmpleadoEstudianteFK");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.HasKey("IdCalificacion");

                    b.HasIndex("IdAsignaturaEmpleadoEstudianteFk");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.ToTable("CALIFICACIONES");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Circunscripciones", b =>
                {
                    b.Property<int>("IdCircunscripcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idCircunscripcion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionCircunscripcion")
                        .IsRequired()
                        .HasColumnName("descripcionCircunscripcion")
                        .HasColumnType("text");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.HasKey("IdCircunscripcion");

                    b.HasIndex("IdEstadoFk");

                    b.ToTable("CIRCUNSCRIPCIONES");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Ciudades", b =>
                {
                    b.Property<string>("IdCiudad")
                        .HasColumnName("idCiudad")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("DescripcionCiudad")
                        .IsRequired()
                        .HasColumnName("descripcionCiudad")
                        .HasColumnType("text");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<string>("IdPaisFk")
                        .IsRequired()
                        .HasColumnName("idPaisFK")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.HasKey("IdCiudad");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdPaisFk");

                    b.ToTable("CIUDADES");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Conductaobservaciones", b =>
                {
                    b.Property<int>("IdConductaObservacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idConductaObservacion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionConductaObservacion")
                        .IsRequired()
                        .HasColumnName("descripcionConductaObservacion")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaConductaObservacion")
                        .HasColumnName("fechaConductaObservacion")
                        .HasColumnType("date");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdPersonaFk")
                        .HasColumnName("idPersonaFK");

                    b.HasKey("IdConductaObservacion");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdPersonaFk");

                    b.ToTable("CONDUCTAOBSERVACIONES");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Correos", b =>
                {
                    b.Property<int>("IdCorreo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idCorreo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionCorreo")
                        .IsRequired()
                        .HasColumnName("descripcionCorreo")
                        .HasColumnType("text");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.HasKey("IdCorreo");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.ToTable("CORREOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Cuentas", b =>
                {
                    b.Property<int>("IdCuenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idCuenta")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionCuenta")
                        .IsRequired()
                        .HasColumnName("descripcionCuenta")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCuenta")
                        .HasColumnName("fechaCuenta")
                        .HasColumnType("date");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.Property<int>("IdPersonaFk")
                        .HasColumnName("idPersonaFK");

                    b.Property<int>("IdTipoCuentaFk")
                        .HasColumnName("idTipoCuentaFK");

                    b.Property<decimal>("MontoCuenta")
                        .HasColumnName("montoCuenta")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("IdCuenta");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.HasIndex("IdPersonaFk");

                    b.HasIndex("IdTipoCuentaFk");

                    b.ToTable("CUENTAS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Cursos", b =>
                {
                    b.Property<int>("IdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idCurso")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionCurso")
                        .IsRequired()
                        .HasColumnName("descripcionCurso")
                        .HasColumnType("text");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.Property<decimal>("TiempoCurso")
                        .HasColumnName("tiempoCurso")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("IdCurso");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.ToTable("CURSOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Cursosasignaturas", b =>
                {
                    b.Property<int>("IdCursoAsignatura")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idCursoAsignatura")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IdAsignaturaFk")
                        .IsRequired()
                        .HasColumnName("idAsignaturaFK")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<int>("IdCursoFk")
                        .HasColumnName("idCursoFK");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.HasKey("IdCursoAsignatura");

                    b.HasIndex("IdAsignaturaFk");

                    b.HasIndex("IdCursoFk");

                    b.HasIndex("IdEstadoFk");

                    b.ToTable("CURSOSASIGNATURAS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Direcciones", b =>
                {
                    b.Property<int>("IdDireccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idDireccion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionDireccion")
                        .IsRequired()
                        .HasColumnName("descripcionDireccion")
                        .HasColumnType("text");

                    b.Property<int>("IdBarrioFk")
                        .HasColumnName("idBarrioFK");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.HasKey("IdDireccion");

                    b.HasIndex("IdBarrioFk");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.ToTable("DIRECCIONES");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Documentos", b =>
                {
                    b.Property<int>("IdDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idDocumento")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionDocumento")
                        .IsRequired()
                        .HasColumnName("descripcionDocumento")
                        .HasColumnType("text");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.Property<int>("IdTipoDocumentoFk")
                        .HasColumnName("idTipoDocumentoFK");

                    b.HasKey("IdDocumento");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.HasIndex("IdTipoDocumentoFk");

                    b.ToTable("DOCUMENTOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Dominioestados", b =>
                {
                    b.Property<int>("IdDominioEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idDominioEstado")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionDominioEstado")
                        .IsRequired()
                        .HasColumnName("descripcionDominioEstado")
                        .HasColumnType("text");

                    b.HasKey("IdDominioEstado");

                    b.ToTable("DOMINIOESTADOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Edificios", b =>
                {
                    b.Property<int>("IdEdificio")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idEdificio")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionEdificio")
                        .IsRequired()
                        .HasColumnName("descripcionEdificio")
                        .HasColumnType("text");

                    b.Property<int>("IdDireccionFk")
                        .HasColumnName("idDireccionFK");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.HasKey("IdEdificio");

                    b.HasIndex("IdDireccionFk");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.ToTable("EDIFICIOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Empleados", b =>
                {
                    b.Property<string>("CodigoEmpleado")
                        .HasColumnName("codigoEmpleado")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<DateTime>("FechaInicioEmpleado")
                        .HasColumnName("fechaInicioEmpleado")
                        .HasColumnType("date");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.Property<int>("IdPersonaFk")
                        .HasColumnName("idPersonaFK");

                    b.Property<int>("IdPuestoTrabajoFk")
                        .HasColumnName("idPuestoTrabajoFK");

                    b.Property<decimal>("SueldoEmpleado")
                        .HasColumnName("sueldoEmpleado")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("CodigoEmpleado");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.HasIndex("IdPersonaFk");

                    b.HasIndex("IdPuestoTrabajoFk");

                    b.ToTable("EMPLEADOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Enlaces", b =>
                {
                    b.Property<int>("IdEnlace")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idEnlace")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionEnlace")
                        .IsRequired()
                        .HasColumnName("descripcionEnlace")
                        .HasColumnType("text");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.Property<int>("IdRolFk")
                        .HasColumnName("idRolFK");

                    b.Property<string>("UrlEnlace")
                        .IsRequired()
                        .HasColumnName("urlEnlace")
                        .HasColumnType("text");

                    b.HasKey("IdEnlace");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.HasIndex("IdRolFk");

                    b.ToTable("ENLACES");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Estados", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idEstado")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionEstado")
                        .IsRequired()
                        .HasColumnName("descripcionEstado")
                        .HasColumnType("text");

                    b.Property<bool>("Estado")
                        .HasColumnName("estado");

                    b.Property<int>("IdDominioEstadoFk")
                        .HasColumnName("idDominioEstadoFK");

                    b.HasKey("IdEstado");

                    b.HasIndex("IdDominioEstadoFk");

                    b.ToTable("ESTADOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Estudiantes", b =>
                {
                    b.Property<string>("CodigoEstudiante")
                        .HasColumnName("codigoEstudiante")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<DateTime>("FechaInicioEstudiante")
                        .HasColumnName("fechaInicioEstudiante")
                        .HasColumnType("date");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.Property<int>("IdPersonaFk")
                        .HasColumnName("idPersonaFK");

                    b.HasKey("CodigoEstudiante");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.HasIndex("IdPersonaFk");

                    b.ToTable("ESTUDIANTES");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Estudiantescursos", b =>
                {
                    b.Property<int>("IdEstudianteCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idEstudianteCurso")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoEstudianteFk")
                        .HasColumnName("codigoEstudianteFK")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<DateTime>("FechaEstudianteCurso")
                        .HasColumnName("fechaEstudianteCurso")
                        .HasColumnType("date");

                    b.Property<int>("IdCursoFk")
                        .HasColumnName("idCursoFK");

                    b.HasKey("IdEstudianteCurso");

                    b.HasIndex("CodigoEstudianteFk");

                    b.HasIndex("IdCursoFk");

                    b.ToTable("ESTUDIANTESCURSOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Instituciones", b =>
                {
                    b.Property<int>("IdInstitucion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idInstitucion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionInstitucion")
                        .IsRequired()
                        .HasColumnName("descripcionInstitucion")
                        .HasColumnType("text");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<string>("NombreInstitucion")
                        .IsRequired()
                        .HasColumnName("nombreInstitucion")
                        .HasColumnType("text");

                    b.HasKey("IdInstitucion");

                    b.HasIndex("IdEstadoFk");

                    b.ToTable("INSTITUCIONES");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Institucionescorreos", b =>
                {
                    b.Property<int>("IdInstitucionCorreo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idInstitucionCorreo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCorreoFk")
                        .HasColumnName("idCorreoFK");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.HasKey("IdInstitucionCorreo");

                    b.HasIndex("IdCorreoFk");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.ToTable("INSTITUCIONESCORREOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Institucionestelefonos", b =>
                {
                    b.Property<int>("IdInstitucionTelefono")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idInstitucionTelefono")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.Property<int>("IdTelefonoFk")
                        .HasColumnName("idTelefonoFK");

                    b.HasKey("IdInstitucionTelefono");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.HasIndex("IdTelefonoFk");

                    b.ToTable("INSTITUCIONESTELEFONOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Mensajes", b =>
                {
                    b.Property<int>("IdMensaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idMensaje")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionMensaje")
                        .IsRequired()
                        .HasColumnName("descripcionMensaje")
                        .HasColumnType("text");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.Property<int>("IdUsuarioEmisorFk")
                        .HasColumnName("idUsuarioEmisorFK");

                    b.Property<int>("IdUsuarioReceptorFk")
                        .HasColumnName("idUsuarioReceptorFK");

                    b.Property<string>("TituloMensaje")
                        .IsRequired()
                        .HasColumnName("tituloMensaje")
                        .HasColumnType("text");

                    b.HasKey("IdMensaje");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.HasIndex("IdUsuarioEmisorFk");

                    b.HasIndex("IdUsuarioReceptorFk");

                    b.ToTable("MENSAJES");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Movimientos", b =>
                {
                    b.Property<int>("IdMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idMovimiento")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionMovimiento")
                        .IsRequired()
                        .HasColumnName("descripcionMovimiento")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaMovimiento")
                        .HasColumnName("fechaMovimiento")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("HoraMovimiento")
                        .HasColumnName("horaMovimiento");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.Property<int>("IdTipoMovimiento")
                        .HasColumnName("idTipoMovimiento");

                    b.Property<decimal>("MontoMovimiento")
                        .HasColumnName("montoMovimiento")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("IdMovimiento");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.ToTable("MOVIMIENTOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Paises", b =>
                {
                    b.Property<string>("IdPais")
                        .HasColumnName("idPais")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("DescripcionPais")
                        .IsRequired()
                        .HasColumnName("descripcionPais")
                        .HasColumnType("text");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.HasKey("IdPais");

                    b.HasIndex("IdEstadoFk");

                    b.ToTable("PAISES");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Periodos", b =>
                {
                    b.Property<int>("IdPeriodo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idPeriodo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionPeriodo")
                        .IsRequired()
                        .HasColumnName("descripcionPeriodo")
                        .HasColumnType("text");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.HasKey("IdPeriodo");

                    b.HasIndex("IdEstadoFk");

                    b.ToTable("PERIODOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Personas", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idPersona")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoPersonas")
                        .IsRequired()
                        .HasColumnName("apellidoPersonas")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaNacimientoPersona")
                        .HasColumnName("fechaNacimientoPersona")
                        .HasColumnType("date");

                    b.Property<int>("IdDireccionFk")
                        .HasColumnName("idDireccionFK");

                    b.Property<string>("NombrePersonas")
                        .IsRequired()
                        .HasColumnName("nombrePersonas")
                        .HasColumnType("text");

                    b.HasKey("IdPersona");

                    b.HasIndex("IdDireccionFk");

                    b.ToTable("PERSONAS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Personascorreos", b =>
                {
                    b.Property<int>("IdPersonaCorreo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idPersonaCorreo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCorreoFk")
                        .HasColumnName("idCorreoFK");

                    b.Property<int>("IdPersonaFk")
                        .HasColumnName("idPersonaFK");

                    b.HasKey("IdPersonaCorreo");

                    b.HasIndex("IdCorreoFk");

                    b.HasIndex("IdPersonaFk");

                    b.ToTable("PERSONASCORREOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Personastelefonos", b =>
                {
                    b.Property<int>("IdPersonaTelefono")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idPersonaTelefono")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdPersonaFk")
                        .HasColumnName("idPersonaFK");

                    b.Property<int>("IdTelefonoFk")
                        .HasColumnName("idTelefonoFK");

                    b.HasKey("IdPersonaTelefono");

                    b.HasIndex("IdPersonaFk");

                    b.HasIndex("IdTelefonoFk");

                    b.ToTable("PERSONASTELEFONOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Prioridades", b =>
                {
                    b.Property<int>("IdPrioridad")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idPrioridad")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionPrioridad")
                        .IsRequired()
                        .HasColumnName("descripcionPrioridad")
                        .HasColumnType("text");

                    b.HasKey("IdPrioridad");

                    b.ToTable("PRIORIDADES");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Puestostrabajos", b =>
                {
                    b.Property<int>("IdPuestoTrabajo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idPuestoTrabajo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionPuestoTrabajo")
                        .IsRequired()
                        .HasColumnName("descripcionPuestoTrabajo")
                        .HasColumnType("text");

                    b.HasKey("IdPuestoTrabajo");

                    b.ToTable("PUESTOSTRABAJOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Relaciones", b =>
                {
                    b.Property<int>("IdRelacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idRelacion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdPersonaFk")
                        .HasColumnName("idPersonaFK");

                    b.Property<int>("IdPersonaRelacionFk")
                        .HasColumnName("idPersonaRelacionFK");

                    b.Property<int>("IdTipoRelacionFk")
                        .HasColumnName("idTipoRelacionFK");

                    b.HasKey("IdRelacion");

                    b.HasIndex("IdPersonaFk");

                    b.HasIndex("IdPersonaRelacionFk");

                    b.HasIndex("IdTipoRelacionFk");

                    b.ToTable("RELACIONES");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Responsabilidadobservaciones", b =>
                {
                    b.Property<int>("IdResponsabilidadObservacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idResponsabilidadObservacion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionResponsabilidadObservacion")
                        .IsRequired()
                        .HasColumnName("descripcionResponsabilidadObservacion")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaResponsabilidadObservacion")
                        .HasColumnName("fechaResponsabilidadObservacion")
                        .HasColumnType("date");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdPersonaFk")
                        .HasColumnName("idPersonaFK");

                    b.HasKey("IdResponsabilidadObservacion");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdPersonaFk");

                    b.ToTable("RESPONSABILIDADOBSERVACIONES");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Roles", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idRol")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionRol")
                        .IsRequired()
                        .HasColumnName("descripcionRol")
                        .HasColumnType("text");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.HasKey("IdRol");

                    b.HasIndex("IdEstadoFk");

                    b.ToTable("ROLES");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Saludobservaciones", b =>
                {
                    b.Property<int>("IdSaludObservacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idSaludObservacion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionSaludObservacion")
                        .IsRequired()
                        .HasColumnName("descripcionSaludObservacion")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaSaludObservacion")
                        .HasColumnName("fechaSaludObservacion")
                        .HasColumnType("date");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdPersonaFk")
                        .HasColumnName("idPersonaFK");

                    b.HasKey("IdSaludObservacion");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdPersonaFk");

                    b.ToTable("SALUDOBSERVACIONES");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Tareas", b =>
                {
                    b.Property<int>("IdTarea")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idTarea")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionTarea")
                        .IsRequired()
                        .HasColumnName("descripcionTarea")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaTarea")
                        .HasColumnName("fechaTarea")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("HoraTarea")
                        .HasColumnName("horaTarea");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.Property<int>("IdPrioridadFk")
                        .HasColumnName("idPrioridadFK");

                    b.Property<string>("TituloTarea")
                        .IsRequired()
                        .HasColumnName("tituloTarea")
                        .HasColumnType("text");

                    b.HasKey("IdTarea");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.HasIndex("IdPrioridadFk");

                    b.ToTable("TAREAS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Telefonos", b =>
                {
                    b.Property<int>("IdTelefono")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idTelefono")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionTelefono")
                        .IsRequired()
                        .HasColumnName("descripcionTelefono")
                        .HasColumnType("text");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.Property<int>("IdTipoTelefonoFk")
                        .HasColumnName("idTipoTelefonoFK");

                    b.HasKey("IdTelefono");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.HasIndex("IdTipoTelefonoFk");

                    b.ToTable("TELEFONOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Tipocuentas", b =>
                {
                    b.Property<int>("IdTipoCuenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idTipoCuenta")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionTipoCuenta")
                        .IsRequired()
                        .HasColumnName("descripcionTipoCuenta")
                        .HasColumnType("text");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.HasKey("IdTipoCuenta");

                    b.HasIndex("IdEstadoFk");

                    b.ToTable("TIPOCUENTAS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Tipodocumentos", b =>
                {
                    b.Property<int>("IdTipoDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idTipoDocumento")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionTipoDocumento")
                        .IsRequired()
                        .HasColumnName("descripcionTipoDocumento")
                        .HasColumnType("text");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.HasKey("IdTipoDocumento");

                    b.HasIndex("IdEstadoFk");

                    b.ToTable("TIPODOCUMENTOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Tiposarchivos", b =>
                {
                    b.Property<int>("IdTipoArchivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idTipoArchivo")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionTipoArchivo")
                        .IsRequired()
                        .HasColumnName("descripcionTipoArchivo")
                        .HasColumnType("text");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<string>("TerminalTipoArchivo")
                        .IsRequired()
                        .HasColumnName("terminalTipoArchivo")
                        .HasColumnType("text");

                    b.HasKey("IdTipoArchivo");

                    b.HasIndex("IdEstadoFk");

                    b.ToTable("TIPOSARCHIVOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Tiposrelaciones", b =>
                {
                    b.Property<int>("IdTipoRelacion")
                        .HasColumnName("idTipoRelacion");

                    b.Property<string>("DescripcionTipoRelacion")
                        .IsRequired()
                        .HasColumnName("descripcionTipoRelacion")
                        .HasColumnType("text");

                    b.HasKey("IdTipoRelacion");

                    b.ToTable("TIPOSRELACIONES");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Tipotelefonos", b =>
                {
                    b.Property<int>("IdTipoTelefono")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idTipoTelefono")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionTipoTelefono")
                        .IsRequired()
                        .HasColumnName("descripcionTipoTelefono")
                        .HasColumnType("text");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.HasKey("IdTipoTelefono");

                    b.HasIndex("IdEstadoFk");

                    b.ToTable("TIPOTELEFONOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Usuarios", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idUsuario")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdEstadoFk")
                        .HasColumnName("idEstadoFK");

                    b.Property<int>("IdInstitucionFk")
                        .HasColumnName("idInstitucionFK");

                    b.Property<int>("IdPersonaFk")
                        .HasColumnName("idPersonaFK");

                    b.Property<int>("IdRolFk")
                        .HasColumnName("idRolFK");

                    b.Property<string>("NameUsuario")
                        .IsRequired()
                        .HasColumnName("nameUsuario")
                        .HasColumnType("text");

                    b.Property<string>("PasswordUsuario")
                        .IsRequired()
                        .HasColumnName("passwordUsuario")
                        .HasColumnType("text");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdEstadoFk");

                    b.HasIndex("IdInstitucionFk");

                    b.HasIndex("IdPersonaFk");

                    b.HasIndex("IdRolFk");

                    b.ToTable("USUARIOS");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Actanacimiento", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Circunscripciones", "IdCircunscripcionFkNavigation")
                        .WithMany("Actanacimiento")
                        .HasForeignKey("IdCircunscripcionFk")
                        .HasConstraintName("FK__ACTANACIM__idCir__797309D9");

                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Actanacimiento")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__ACTANACIM__idEst__787EE5A0");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Actanacimiento")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__ACTANACIM__idIns__4D5F7D71");

                    b.HasOne("DIRECTION_GESTOR.Models.Personas", "IdPersonaFkNavigation")
                        .WithMany("Actanacimiento")
                        .HasForeignKey("IdPersonaFk")
                        .HasConstraintName("FK__ACTANACIM__idPer__778AC167");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Archivos", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Archivos")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__ARCHIVOS__idEsta__6A30C649");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Archivos")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__ARCHIVOS__idInst__55F4C372");

                    b.HasOne("DIRECTION_GESTOR.Models.Tiposarchivos", "IdTipoArchivoFkNavigation")
                        .WithMany("Archivos")
                        .HasForeignKey("IdTipoArchivoFk")
                        .HasConstraintName("FK__ARCHIVOS__idTipo__693CA210");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Articulos", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Articulos")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__ARTICULOS__idEst__2A164134");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Articulos")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__ARTICULOS__idIns__5CA1C101");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Asignaturas", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Asignaturas")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__ASIGNATUR__idEst__10566F31");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Asignaturas")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__ASIGNATUR__idIns__59C55456");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Asignaturasempleados", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Empleados", "CodigoEmpleadoFkNavigation")
                        .WithMany("Asignaturasempleados")
                        .HasForeignKey("CodigoEmpleadoFk")
                        .HasConstraintName("FK__ASIGNATUR__codig__123EB7A3");

                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Asignaturasempleados")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__ASIGNATUR__idEst__1332DBDC");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Asignaturasempleadosestudiantes", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estudiantes", "CodigoEstudianteFkNavigation")
                        .WithMany("Asignaturasempleadosestudiantes")
                        .HasForeignKey("CodigoEstudianteFk")
                        .HasConstraintName("FK__ASIGNATUR__codig__151B244E");

                    b.HasOne("DIRECTION_GESTOR.Models.Asignaturasempleados", "IdAsignaturaEmpleadoFkNavigation")
                        .WithMany("Asignaturasempleadosestudiantes")
                        .HasForeignKey("IdAsignaturaEmpleadoFk")
                        .HasConstraintName("FK__ASIGNATUR__idAsi__14270015");

                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Asignaturasempleadosestudiantes")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__ASIGNATUR__idEst__160F4887");

                    b.HasOne("DIRECTION_GESTOR.Models.Periodos", "IdPeriodoFkNavigation")
                        .WithMany("Asignaturasempleadosestudiantes")
                        .HasForeignKey("IdPeriodoFk")
                        .HasConstraintName("FK__ASIGNATUR__idPer__17036CC0");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Aulas", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Edificios", "IdEdificioFkNavigation")
                        .WithMany("Aulas")
                        .HasForeignKey("IdEdificioFk")
                        .HasConstraintName("FK__AULAS__idEdifici__70DDC3D8");

                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Aulas")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__AULAS__idEstadoF__6FE99F9F");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Aulas")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__AULAS__idInstitu__55009F39");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Barrios", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Ciudades", "IdCiudadFkNavigation")
                        .WithMany("Barrios")
                        .HasForeignKey("IdCiudadFk")
                        .HasConstraintName("FK__BARRIOS__idCiuda__72C60C4A");

                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Barrios")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__BARRIOS__idEstad__71D1E811");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Calificaciones", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Asignaturasempleadosestudiantes", "IdAsignaturaEmpleadoEstudianteFkNavigation")
                        .WithMany("Calificaciones")
                        .HasForeignKey("IdAsignaturaEmpleadoEstudianteFk")
                        .HasConstraintName("FK__CALIFICAC__idAsi__17F790F9");

                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Calificaciones")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__CALIFICAC__idEst__18EBB532");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Calificaciones")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__CALIFICAC__idIns__5AB9788F");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Circunscripciones", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Circunscripciones")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__CIRCUNSCR__idEst__76969D2E");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Ciudades", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Ciudades")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__CIUDADES__idEsta__73BA3083");

                    b.HasOne("DIRECTION_GESTOR.Models.Paises", "IdPaisFkNavigation")
                        .WithMany("Ciudades")
                        .HasForeignKey("IdPaisFk")
                        .HasConstraintName("FK__CIUDADES__idPais__74AE54BC");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Conductaobservaciones", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Conductaobservaciones")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__CONDUCTAO__idEst__69FBBC1F");

                    b.HasOne("DIRECTION_GESTOR.Models.Personas", "IdPersonaFkNavigation")
                        .WithMany("Conductaobservaciones")
                        .HasForeignKey("IdPersonaFk")
                        .HasConstraintName("FK__CONDUCTAO__idPer__671F4F74");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Correos", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Correos")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__CORREOS__idEstad__02084FDA");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Correos")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__CORREOS__idInsti__4F47C5E3");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Cuentas", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Cuentas")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__CUENTAS__idEstad__2CF2ADDF");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Cuentas")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__CUENTAS__idInsti__503BEA1C");

                    b.HasOne("DIRECTION_GESTOR.Models.Personas", "IdPersonaFkNavigation")
                        .WithMany("Cuentas")
                        .HasForeignKey("IdPersonaFk")
                        .HasConstraintName("FK__CUENTAS__idPerso__2BFE89A6");

                    b.HasOne("DIRECTION_GESTOR.Models.Tipocuentas", "IdTipoCuentaFkNavigation")
                        .WithMany("Cuentas")
                        .HasForeignKey("IdTipoCuentaFk")
                        .HasConstraintName("FK__CUENTAS__idTipoC__2B0A656D");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Cursos", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Cursos")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__CURSOS__idEstado__06CD04F7");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Cursos")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__CURSOS__idInstit__56E8E7AB");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Cursosasignaturas", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Asignaturas", "IdAsignaturaFkNavigation")
                        .WithMany("Cursosasignaturas")
                        .HasForeignKey("IdAsignaturaFk")
                        .HasConstraintName("FK__CURSOSASI__idAsi__09A971A2");

                    b.HasOne("DIRECTION_GESTOR.Models.Cursos", "IdCursoFkNavigation")
                        .WithMany("Cursosasignaturas")
                        .HasForeignKey("IdCursoFk")
                        .HasConstraintName("FK__CURSOSASI__idCur__0A9D95DB");

                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Cursosasignaturas")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__CURSOSASI__idEst__0F624AF8");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Direcciones", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Barrios", "IdBarrioFkNavigation")
                        .WithMany("Direcciones")
                        .HasForeignKey("IdBarrioFk")
                        .HasConstraintName("FK__DIRECCION__idBar__6D0D32F4");

                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Direcciones")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__DIRECCION__idEst__6C190EBB");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Direcciones")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__DIRECCION__idIns__58D1301D");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Documentos", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Documentos")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__DOCUMENTO__idEst__7B5B524B");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Documentos")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__DOCUMENTO__idIns__531856C7");

                    b.HasOne("DIRECTION_GESTOR.Models.Tipodocumentos", "IdTipoDocumentoFkNavigation")
                        .WithMany("Documentos")
                        .HasForeignKey("IdTipoDocumentoFk")
                        .HasConstraintName("FK__DOCUMENTO__idTip__7A672E12");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Edificios", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Direcciones", "IdDireccionFkNavigation")
                        .WithMany("Edificios")
                        .HasForeignKey("IdDireccionFk")
                        .HasConstraintName("FK__EDIFICIOS__idDir__6EF57B66");

                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Edificios")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__EDIFICIOS__idEst__6E01572D");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Edificios")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__EDIFICIOS__idIns__540C7B00");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Empleados", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__EMPLEADOS__idEst__0D7A0286");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__EMPLEADOS__idIns__51300E55");

                    b.HasOne("DIRECTION_GESTOR.Models.Personas", "IdPersonaFkNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("IdPersonaFk")
                        .HasConstraintName("FK__EMPLEADOS__idPer__0C85DE4D");

                    b.HasOne("DIRECTION_GESTOR.Models.Puestostrabajos", "IdPuestoTrabajoFkNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("IdPuestoTrabajoFk")
                        .HasConstraintName("FK__EMPLEADOS__idPue__0E6E26BF");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Enlaces", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Enlaces")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__ENLACES__idEstad__245D67DE");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Enlaces")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__ENLACES__idInsti__5BAD9CC8");

                    b.HasOne("DIRECTION_GESTOR.Models.Roles", "IdRolFkNavigation")
                        .WithMany("Enlaces")
                        .HasForeignKey("IdRolFk")
                        .HasConstraintName("FK__ENLACES__idRolFK__25518C17");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Estados", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Dominioestados", "IdDominioEstadoFkNavigation")
                        .WithMany("Estados")
                        .HasForeignKey("IdDominioEstadoFk")
                        .HasConstraintName("FK__ESTADOS__idDomin__6477ECF3");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Estudiantes", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Estudiantes")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__ESTUDIANT__idEst__05D8E0BE");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Estudiantes")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__ESTUDIANT__idIns__5224328E");

                    b.HasOne("DIRECTION_GESTOR.Models.Personas", "IdPersonaFkNavigation")
                        .WithMany("Estudiantes")
                        .HasForeignKey("IdPersonaFk")
                        .HasConstraintName("FK__ESTUDIANT__idPer__04E4BC85");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Estudiantescursos", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estudiantes", "CodigoEstudianteFkNavigation")
                        .WithMany("Estudiantescursos")
                        .HasForeignKey("CodigoEstudianteFk")
                        .HasConstraintName("FK__ESTUDIANT__codig__07C12930");

                    b.HasOne("DIRECTION_GESTOR.Models.Cursos", "IdCursoFkNavigation")
                        .WithMany("Estudiantescursos")
                        .HasForeignKey("IdCursoFk")
                        .HasConstraintName("FK__ESTUDIANT__idCur__08B54D69");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Instituciones", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Instituciones")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__INSTITUCI__idEst__1CBC4616");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Institucionescorreos", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Correos", "IdCorreoFkNavigation")
                        .WithMany("Institucionescorreos")
                        .HasForeignKey("IdCorreoFk")
                        .HasConstraintName("FK__INSTITUCI__idCor__2180FB33");

                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Institucionescorreos")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__INSTITUCI__idEst__22751F6C");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Institucionescorreos")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__INSTITUCI__idIns__208CD6FA");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Institucionestelefonos", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Institucionestelefonos")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__INSTITUCI__idEst__1F98B2C1");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Institucionestelefonos")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__INSTITUCI__idIns__1DB06A4F");

                    b.HasOne("DIRECTION_GESTOR.Models.Telefonos", "IdTelefonoFkNavigation")
                        .WithMany("Institucionestelefonos")
                        .HasForeignKey("IdTelefonoFk")
                        .HasConstraintName("FK__INSTITUCI__idTel__1EA48E88");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Mensajes", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Mensajes")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__MENSAJES__idEsta__29221CFB");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Mensajes")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__MENSAJES__idInst__5E8A0973");

                    b.HasOne("DIRECTION_GESTOR.Models.Usuarios", "IdUsuarioEmisorFkNavigation")
                        .WithMany("MensajesIdUsuarioEmisorFkNavigation")
                        .HasForeignKey("IdUsuarioEmisorFk")
                        .HasConstraintName("FK__MENSAJES__idUsua__2739D489");

                    b.HasOne("DIRECTION_GESTOR.Models.Usuarios", "IdUsuarioReceptorFkNavigation")
                        .WithMany("MensajesIdUsuarioReceptorFkNavigation")
                        .HasForeignKey("IdUsuarioReceptorFk")
                        .HasConstraintName("FK__MENSAJES__idUsua__282DF8C2");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Movimientos", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Movimientos")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__MOVIMIENT__idEst__2EDAF651");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Movimientos")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__MOVIMIENT__idIns__5F7E2DAC");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Paises", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Paises")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__PAISES__idEstado__75A278F5");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Periodos", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Periodos")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__PERIODOS__idEsta__114A936A");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Personas", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Direcciones", "IdDireccionFkNavigation")
                        .WithMany("Personas")
                        .HasForeignKey("IdDireccionFk")
                        .HasConstraintName("FK__PERSONAS__idDire__656C112C");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Personascorreos", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Correos", "IdCorreoFkNavigation")
                        .WithMany("Personascorreos")
                        .HasForeignKey("IdCorreoFk")
                        .HasConstraintName("FK__PERSONASC__idCor__03F0984C");

                    b.HasOne("DIRECTION_GESTOR.Models.Personas", "IdPersonaFkNavigation")
                        .WithMany("Personascorreos")
                        .HasForeignKey("IdPersonaFk")
                        .HasConstraintName("FK__PERSONASC__idPer__02FC7413");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Personastelefonos", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Personas", "IdPersonaFkNavigation")
                        .WithMany("Personastelefonos")
                        .HasForeignKey("IdPersonaFk")
                        .HasConstraintName("FK__PERSONAST__idPer__00200768");

                    b.HasOne("DIRECTION_GESTOR.Models.Telefonos", "IdTelefonoFkNavigation")
                        .WithMany("Personastelefonos")
                        .HasForeignKey("IdTelefonoFk")
                        .HasConstraintName("FK__PERSONAST__idTel__01142BA1");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Relaciones", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Personas", "IdPersonaFkNavigation")
                        .WithMany("RelacionesIdPersonaFkNavigation")
                        .HasForeignKey("IdPersonaFk")
                        .HasConstraintName("FK__RELACIONE__idPer__66603565");

                    b.HasOne("DIRECTION_GESTOR.Models.Personas", "IdPersonaRelacionFkNavigation")
                        .WithMany("RelacionesIdPersonaRelacionFkNavigation")
                        .HasForeignKey("IdPersonaRelacionFk")
                        .HasConstraintName("FK__RELACIONE__idPer__6754599E");

                    b.HasOne("DIRECTION_GESTOR.Models.Tiposrelaciones", "IdTipoRelacionFkNavigation")
                        .WithMany("Relaciones")
                        .HasForeignKey("IdTipoRelacionFk")
                        .HasConstraintName("FK__RELACIONE__idTip__68487DD7");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Responsabilidadobservaciones", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Responsabilidadobservaciones")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__RESPONSAB__idEst__6AEFE058");

                    b.HasOne("DIRECTION_GESTOR.Models.Personas", "IdPersonaFkNavigation")
                        .WithMany("Responsabilidadobservaciones")
                        .HasForeignKey("IdPersonaFk")
                        .HasConstraintName("FK__RESPONSAB__idPer__681373AD");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Roles", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Roles")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__ROLES__idEstadoF__236943A5");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Saludobservaciones", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Saludobservaciones")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__SALUDOBSE__idEst__690797E6");

                    b.HasOne("DIRECTION_GESTOR.Models.Personas", "IdPersonaFkNavigation")
                        .WithMany("Saludobservaciones")
                        .HasForeignKey("IdPersonaFk")
                        .HasConstraintName("FK__SALUDOBSE__idPer__662B2B3B");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Tareas", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Tareas")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__TAREAS__idEstado__2645B050");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Tareas")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__TAREAS__idInstit__57DD0BE4");

                    b.HasOne("DIRECTION_GESTOR.Models.Prioridades", "IdPrioridadFkNavigation")
                        .WithMany("Tareas")
                        .HasForeignKey("IdPrioridadFk")
                        .HasConstraintName("FK__TAREAS__idPriori__40058253");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Telefonos", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Telefonos")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__TELEFONOS__idEst__7E37BEF6");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Telefonos")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__TELEFONOS__idIns__4E53A1AA");

                    b.HasOne("DIRECTION_GESTOR.Models.Tipotelefonos", "IdTipoTelefonoFkNavigation")
                        .WithMany("Telefonos")
                        .HasForeignKey("IdTipoTelefonoFk")
                        .HasConstraintName("FK__TELEFONOS__idTip__7D439ABD");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Tipocuentas", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Tipocuentas")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__TIPOCUENT__idEst__2DE6D218");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Tipodocumentos", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Tipodocumentos")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__TIPODOCUM__idEst__7C4F7684");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Tiposarchivos", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Tiposarchivos")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__TIPOSARCH__idEst__6B24EA82");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Tipotelefonos", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Tipotelefonos")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__TIPOTELEF__idEst__7F2BE32F");
                });

            modelBuilder.Entity("DIRECTION_GESTOR.Models.Usuarios", b =>
                {
                    b.HasOne("DIRECTION_GESTOR.Models.Estados", "IdEstadoFkNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdEstadoFk")
                        .HasConstraintName("FK__USUARIOS__idEsta__19DFD96B");

                    b.HasOne("DIRECTION_GESTOR.Models.Instituciones", "IdInstitucionFkNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdInstitucionFk")
                        .HasConstraintName("FK__USUARIOS__idInst__5D95E53A");

                    b.HasOne("DIRECTION_GESTOR.Models.Personas", "IdPersonaFkNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdPersonaFk")
                        .HasConstraintName("FK__USUARIOS__idPers__1BC821DD");

                    b.HasOne("DIRECTION_GESTOR.Models.Roles", "IdRolFkNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRolFk")
                        .HasConstraintName("FK__USUARIOS__idRolF__1AD3FDA4");
                });
#pragma warning restore 612, 618
        }
    }
}
